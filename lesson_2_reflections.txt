What happens when you initialize a repository? Why do you need to do it?
A).git is created, which is to track my commit history.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
A) At staging area we can specify files to be committed.

How can you use the staging area to make sure you have one commit per logical change?
A) After inserting a logical change to the file, we can add it to the staging area to
commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
A) Branches are helpful when, for example, we want to create a different version
of the program, or do some experiments.

How do the diagrams help you visualize the branch structure?
A) It shows the structure of many branches visually.

What is the result of merging two branches together? Why do we represent it in the
diagram the way we do?
A) The breach merged to master branch was deleted but the commits were still trackable.

What are the pros and cons of Git's automatic merging vs. always doing merges manually?
A) Git's allows us to detect and work on efficiently the conflicts. Automatic merging is
very efficient but may sometimes cause an intended integration of codes, which we can
avoid when doing manually.
